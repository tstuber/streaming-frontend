# Openshift S2I build
quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7

# Openshift secret mount
#  - https://quarkus.io/guides/all-config
#  - https://quarkus.io/guides/deploying-to-kubernetes
quarkus.openshift.secret-volumes.kafka-secret.secret-name=kafka-cluster-cert
quarkus.openshift.mounts.kafka-secret.path=/var/run/secrets/strimzi.io/kafka-cluster-cert

# Configure the Kafka source (also used for Quarkus-Camel Kafka producer)
#  - Camel config: https://dzone.com/articles/develop-camel-quarkus-applications-using-red-hat-q
mp.messaging.incoming.messages.connector=smallrye-kafka
mp.messaging.incoming.messages.bootstrap.servers=standard-cluster-kafka-brokers.amq-streams.svc.cluster.local:9093
mp.messaging.incoming.messages.topic=messaging.messagedb.messages
mp.messaging.incoming.messages.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.messages.security.protocol=SSL
mp.messaging.incoming.messages.ssl.truststore.type=pkcs12
mp.messaging.incoming.messages.ssl.truststore.location=/var/run/secrets/strimzi.io/kafka-cluster-cert/truststore.p12
mp.messaging.incoming.messages.ssl.truststore.password=changeit

# OIDC credentials
quarkus.openshift.env.mapping.oidc-client-id.from-secret=oidc-auth
quarkus.openshift.env.mapping.oidc-client-id.with-key=client.id

quarkus.openshift.env.mapping.oidc-client-secret.from-secret=oidc-auth
quarkus.openshift.env.mapping.oidc-client-secret.with-key=client.password

# OIDC config
#  - https://quarkus.io/guides/security-openid-connect-web-authentication
quarkus.oidc.auth-server-url=https://keycloak-rhsso.apps.aa5qdu9r.westeurope.aroapp.io/auth/realms/ipt
quarkus.oidc.client-id=${OIDC-CLIENT-ID}
quarkus.oidc.credentials.client-secret.value=${OIDC-CLIENT-SECRET}
quarkus.oidc.application-type=web-app
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
